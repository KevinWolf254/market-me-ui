# marketme api server in local network
upstream marketme_server {
    server 10.135.117.118;
}
# marketme client api server in local network
upstream marketme_client_server {
    server 10.135.47.77;
}

# listens to port 80 for proaktivio.com requests
server {
    listen 80;
    listen [::]:80;
    server_name  proaktivio.com www.proaktivio.com;
    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    return 301 https://$host$request_uri;
}

# listens to port 80 for api.marketme.proaktivio.com requests
server {
    listen 80;
    listen [::]:80;
    server_name  api.marketme.proaktivio.com www.api.marketme.proaktivio.com;
    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    return 301 https://$host$request_uri;
}

# listens to port 80 for api.client.marketme.proaktivio.com requests
server {
    listen 80;
    listen [::]:80;
    server_name  api.client.marketme.proaktivio.com www.api.client.marketme.proaktivio.com;
    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    return 301 https://$host$request_uri;
}

# to serve https angular ui
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name proaktivio.com www.proaktivio.com;

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /etc/letsencrypt/live/proaktivio.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/proaktivio.com/privkey.pem;
    
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

    # modern configuration. tweak to your needs.
    ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/proaktivio.com/chain.pem;

    resolver 8.8.8.8 8.8.4.4;

    location / {
        root   /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        index  index.html index.htm;
    }

    # to be used renewing letsencrypt certificates
    location /.well-known/acme-challenge/ {
        allow all;
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        default_type text/plain;
    }
}

# to serve rest responses from api.marketme requests
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.marketme.proaktivio.com www.api.marketme.proaktivio.com;

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /etc/letsencrypt/live/proaktivio.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/proaktivio.com/privkey.pem;
    
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

    # modern configuration. tweak to your needs.
    ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/proaktivio.com/chain.pem;

    resolver 8.8.8.8 8.8.4.4;

    location /{
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        Host $http_host;
        # proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_read_timeout  90;

        # marketme-client-db is the service name on docker-compose file
        proxy_pass          http://marketme_server;
    }
    
    # to be used renewing letsencrypt certificates
    location /.well-known/acme-challenge/ {
        allow all;
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        default_type text/plain;
    }
}

# to serve rest responses from api.client.marketme requests
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.client.marketme.proaktivio.com www.api.client.marketme.proaktivio.com;

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /etc/letsencrypt/live/proaktivio.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/proaktivio.com/privkey.pem;
    
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

    # modern configuration. tweak to your needs.
    ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/proaktivio.com/chain.pem;

    resolver 8.8.8.8 8.8.4.4;

    location /{
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        Host $http_host;
        # proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_read_timeout  90;

        # # Simple requests
        # if ($request_method ~* "(GET|POST)") {
            # add_header "Access-Control-Allow-Origin"  *;
        # }

        # Pre-flighted requests
        if ($request_method = OPTIONS ) {
            add_header "Access-Control-Allow-Origin"  *;
            add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
            add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept, No-Auth";
            return 200;
        }

        # marketme-client-db is the service name on docker-compose file
        proxy_pass          http://marketme_client_server;
    }

    # to be used renewing letsencrypt certificates
    location /.well-known/acme-challenge/ {
        allow all;
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        default_type text/plain;
    }
}